#!/usr/bin/env ruby
require File.dirname(__FILE__) + '/../config/environment'

doc = Sparql.execute("select ?fips ?county ?state from <data> where {
?fips rdf:type o:County .
?fips rdfs:label ?county .
?fips o:partOfState ?fipstate .
?fipstate o:shortName ?state}")
county_data = []
doc.search("result").each do |r| 
	county_data << {
		:county_name => county = "#{r.search('binding[name="county"] literal').first.content} county, #{r.search('binding[name="state"] literal').first.content}",
		:uri => r.search('binding[name="fips"] uri').first.content
	}
end
county_location_data = []
puts "total #{county_data.size}"
i = 0
File.open('queries', 'w') do |file|
  county_data.each do |county|
    i += 1
    puts i if i % 100 == 0
    begin
      county_location = Location.new(county[:county_name])
      county_location_data << {
        :name => county[:county_name],
        :latitude => county_location.lat,
        :longitude => county_location.lon,
        :uri => county[:uri]
      }
    rescue Graticule::Error
    end
    q1 = "INSERT into <data> {<#{county_location_data.last[:uri]}> o:location :newid(#{county_location_data.last[:latitude]}, #{county_location_data.last[:longitude]})}"
    q2 = "INSERT into <data> {?loc o:longitude #{county_location_data.last[:longitude]} . ?loc o:latitude #{county_location_data.last[:latitude]} . ?loc rdf:type o:Location} WHERE {<#{county_location_data.last[:uri]}> o:location ?loc}"
    file.puts q1
    file.puts q2
  end
end
